Build1=Default,b4a.example
File1=coin.png
File2=MainFrame.bal
File3=ruler.png
File4=StartingFrame.bal
File5=weight.jpg
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
Group=Default Group
Library1=core
Library2=xui
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="31"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=5
NumberOfLibraries=2
NumberOfModules=1
Version=12.2
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Unit Converter
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: True
	#IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	
	Private background As Panel
	Private userInp As EditText
	Private result As Label
	Private moneyBef As Spinner
	Private moneyAf As Spinner
	Private massBef As Spinner
	Private massAf As Spinner
	Private distBef As Spinner
	Private distAf As Spinner
	Private convertMoney As Button
	Private convertMass As Button
	Private convertDist As Button
	
	Private mainFrame, startFrame As Panel
	Private coinClick As Boolean = False
	Private weightClick As Boolean = False
	Private lengthClick As Boolean = False
	
End Sub

Sub Activity_Create(FirstTime As Boolean)
'	Load layout, in this case load the starting layout
	init

	'shows number keyboard
	userInp.InputType = userInp.INPUT_TYPE_DECIMAL_NUMBERS

'	makes the hint and text to their first forms
	userInp.Hint = "0.00"
	result.Text = "0.00"
	
'	dec=lare the available convert
	declareList
	
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub init
	mainFrame.Initialize("") : mainFrame.Visible=False
	Activity.AddView(mainFrame,0,0,100%x,100%y)
	mainFrame.LoadLayout("MainFrame")
	
	startFrame.Initialize("") : startFrame.Visible=True
	Activity.AddView(startFrame,0,0,100%x,100%y)
	startFrame.LoadLayout("StartingFrame")
End Sub

Sub declareList
	'add the options on money spinners
	Dim money As List
	money.Initialize2(Array("PHP","US Dollar", "Yuan", "Ruble", "Euro"))
	moneyBef.AddAll(money)
	moneyAf.AddAll(money)
	
	'add the options on temperature spinners
	Dim mass As List
	mass.Initialize2(Array("kilogram", "gram", "pound"))
	massBef.AddAll(mass)
	massAf.AddAll(mass)
	
	'add the options on distance spinners
	Dim distance As List
	distance.Initialize2(Array("kilometer", "centimeter", "meter", "foot"))
	distBef.AddAll(distance)
	distAf.AddAll(distance)
End Sub

Private Sub convertMoney_Click
	Dim from As String
	from = moneyBef.SelectedItem
	
	Dim into As String
	into = moneyAf.SelectedItem
	
	Dim dollarMoney As Map
	dollarMoney.Initialize
	'set US dollar as a standard
	'the plan is to get the currency you want to convert from, convert it to us dollar, then convert it to the currency the user wants it to
	
	dollarMoney.Put("PHP", 54.91)
	dollarMoney.Put("US Dollar", 1.00)
	dollarMoney.Put("Yuan", 6.90)
	dollarMoney.Put("Ruble", 76.26)
	dollarMoney.Put("Euro", 0.94)
	
	Dim userMoney As Float
	If(checkvalue) Then
		userMoney = userInp.Text
	Else
		Return
	End If
	Dim const place As Int = 2
	Dim const minInt As Int = 0
	Dim res As Double = userMoney/dollarMoney.Get(from) * dollarMoney.Get(into)
	result.Text = NumberFormat(res, minInt, place)	
End Sub

Sub checkvalue() As Boolean

	' Get the user input from the EditText view
	Dim userInput As String
	userInput = userInp.Text

	' Check if the input is empty
	If userInput = "" Then
		ToastMessageShow("Please enter a value", True)
		Return False
	End If
	
	Dim userInputDouble As Double = userInp.Text
	' Check if the input is a valid number
	If userInputDouble < 0 Then
		ToastMessageShow("Please enter a positive number", True)
		Return False
	End If

	Return True
	
End Sub


Private Sub convertMass_Click
	Dim from As String
	from = massBef.SelectedItem
	
	Dim into As String
	into = massAf.SelectedItem
	
	Dim mass As Map
	mass.Initialize
	'set US dollar as a standard
	'the plan is to get the currency you want to convert from, convert it to us dollar, then convert it to the currency the user wants it to
	
	mass.Put("kilogram", 0.001)
	mass.Put("gram", 1.00)
	mass.Put("pound", 0.00220462)
	Dim userMass As Float
	If(checkvalue) Then
		userMass = userInp.Text
	Else
		Return
	End If
	Dim const place As Int = 5
	Dim const minInt As Int = 0
	Dim res As Double = userMass/mass.Get(from) * mass.Get(into)
	result.Text = NumberFormat(res,minInt, place)
End Sub

Private Sub convertDist_Click
	Dim from As String
	from = distBef.SelectedItem
	
	Dim into As String
	into = distAf.SelectedItem
	
	Dim distance As Map
	distance.Initialize
	
	distance.Put("kilometer", 0.001)
	distance.Put("centimeter", 100.00)
	distance.Put("meter", 1.00)
	distance.Put("foot", 3.28084)
	Dim userDistance As Float
	If(checkvalue) Then
		userDistance = userInp.Text
	Else
		Return
	End If
	Dim const place As Int = 5
	Dim const minInt As Int = 0
	Dim res As Double = userDistance/distance.Get(from) * distance.Get(into)
	result.Text = NumberFormat(res,minInt, place)
End Sub


Private Sub coin_Click
	coinClick = True
	weightClick = False
	lengthClick = False
	transferMain
End Sub



Private Sub Weight_Click
	coinClick = False
	weightClick = True
	lengthClick = False
	transferMain
End Sub

Private Sub Length_Click
	coinClick = False
	weightClick = False
	lengthClick = True
	transferMain
End Sub

Sub transferMain
	startFrame.Visible = False
	mainFrame.Visible = True
	If coinClick = True Then
		moneyBef.Visible = True
		moneyAf.Visible = True
		
		massBef.Visible = False
		massAf.Visible = False
		
		distBef.Visible = False
		distAf.Visible = False
		
		convertMoney.Visible = True
		convertMass.Visible = False
		convertDist.Visible = False
		
	Else If weightClick = True Then
		moneyBef.Visible = False
		moneyAf.Visible = False
		
		massBef.Visible = True
		massAf.Visible = True
		
		distBef.Visible = False
		distAf.Visible = False
		
		convertMoney.Visible = False
		convertMass.Visible = True
		convertDist.Visible = False
		
	Else If lengthClick = True Then
		moneyBef.Visible = False
		moneyAf.Visible = False
		
		massBef.Visible = False
		massAf.Visible = False
		
		distBef.Visible = True
		distAf.Visible = True
		
		convertMoney.Visible = False
		convertMass.Visible = False
		convertDist.Visible = True
	End If
End Sub

Private Sub backImage_Click
	mainFrame.Visible = False
	startFrame.Visible = True
End Sub